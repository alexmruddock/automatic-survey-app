{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/EditSegment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditSegment() {\n  _s();\n  const {\n    segmentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [segment, setSegment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch the segment data\n  useEffect(() => {\n    const fetchSegment = async () => {\n      try {\n        const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments/${segmentId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setSegment(data);\n        } else {\n          alert(\"Error fetching segment data.\");\n          navigate(\"/segments\"); // Navigate back to segments list on error\n        }\n      } catch (error) {\n        console.error(\"Error fetching segment:\", error);\n        navigate(\"/segments\");\n      }\n      setLoading(false);\n    };\n    fetchSegment();\n  }, [segmentId, navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/update-segment/${segmentId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(segment)\n      });\n      if (response.ok) {\n        alert(\"Segment updated successfully\");\n        navigate(\"/segments\"); // Navigate back to segments list\n      } else {\n        alert(\"Failed to update segment\");\n      }\n    } catch (error) {\n      console.error(\"Error updating segment:\", error);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSegment({\n      ...segment,\n      [name]: value\n    });\n  };\n  const handleCriteriaChange = (criteriaIndex, field, value) => {\n    const updatedCriteria = segment.criteria.map((criteria, index) => index === criteriaIndex ? {\n      ...criteria,\n      [field]: value\n    } : criteria);\n    setSegment({\n      ...segment,\n      criteria: updatedCriteria\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  if (!segment) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Segment not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center\",\n      children: \"Edit Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-md mx-auto mt-8 bg-white shadow-md rounded-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-medium mb-2\",\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: segment.name || \"\",\n          onChange: handleChange,\n          className: \"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"block w-full mt-4 bg-blue-600 text-white font-bold rounded-md px-4 py-3 hover:bg-blue-700\",\n        children: \"Update Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(EditSegment, \"xvo7hXlo6oXiw2QRGU/CxsDrFHs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditSegment;\nexport default EditSegment;\nvar _c;\n$RefreshReg$(_c, \"EditSegment\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authenticatedFetch","jsxDEV","_jsxDEV","EditSegment","_s","segmentId","navigate","segment","setSegment","loading","setLoading","fetchSegment","response","ok","data","json","alert","error","console","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","handleChange","name","value","target","handleCriteriaChange","criteriaIndex","field","updatedCriteria","criteria","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/EditSegment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport authenticatedFetch from \"./authenticatedFetch\";\n\nfunction EditSegment() {\n  const { segmentId } = useParams();\n  const navigate = useNavigate();\n  const [segment, setSegment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch the segment data\n  useEffect(() => {\n    const fetchSegment = async () => {\n      try {\n        const response = await authenticatedFetch(\n          `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments/${segmentId}`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setSegment(data);\n        } else {\n          alert(\"Error fetching segment data.\");\n          navigate(\"/segments\"); // Navigate back to segments list on error\n        }\n      } catch (error) {\n        console.error(\"Error fetching segment:\", error);\n        navigate(\"/segments\");\n      }\n      setLoading(false);\n    };\n\n    fetchSegment();\n  }, [segmentId, navigate]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await authenticatedFetch(\n        `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/update-segment/${segmentId}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(segment),\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Segment updated successfully\");\n        navigate(\"/segments\"); // Navigate back to segments list\n      } else {\n        alert(\"Failed to update segment\");\n      }\n    } catch (error) {\n      console.error(\"Error updating segment:\", error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setSegment({ ...segment, [name]: value });\n  };\n\n  const handleCriteriaChange = (criteriaIndex, field, value) => {\n    const updatedCriteria = segment.criteria.map((criteria, index) =>\n      index === criteriaIndex ? { ...criteria, [field]: value } : criteria\n    );\n    setSegment({ ...segment, criteria: updatedCriteria });\n  };  \n\n  if (loading) return <div>Loading...</div>;\n  if (!segment) return <div>Segment not found.</div>;\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-4xl font-bold text-center\">Edit Segment</h1>\n      <form\n        onSubmit={handleSubmit}\n        className=\"max-w-md mx-auto mt-8 bg-white shadow-md rounded-md p-6\"\n      >\n        {/* Name field */}\n        <label className=\"block text-gray-700 font-medium mb-2\">\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={segment.name || \"\"}\n            onChange={handleChange}\n            className=\"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\"\n          />\n        </label>\n        {/* Description field */}\n        {/* Criteria fields (similar to SegmentManager) */}\n\n        <button\n          type=\"submit\"\n          className=\"block w-full mt-4 bg-blue-600 text-white font-bold rounded-md px-4 py-3 hover:bg-blue-700\"\n        >\n          Update Segment\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditSegment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}