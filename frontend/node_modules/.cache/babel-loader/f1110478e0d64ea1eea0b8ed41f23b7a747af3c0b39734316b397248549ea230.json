{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SurveyVisualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MyBarChart from './MyBarChart'; // Import your chart components\nimport authenticatedFetch from './authenticatedFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyVisualizations() {\n  _s();\n  const [aggregatedData, setAggregatedData] = useState([]);\n  const {\n    surveyId\n  } = useParams();\n  useEffect(() => {\n    authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/${surveyId}/visualize`).then(response => response.json()).then(data => {\n      console.log('Server response:', data); // Log the data\n      setAggregatedData(data.aggregatedData); // Set the state variable to the array\n    }).catch(error => console.error('Error fetching aggregated data:', error));\n  }, [surveyId]);\n\n  // Function to select and render the appropriate visualization component\n  const renderVisualization = (data, questionType, key) => {\n    switch (questionType) {\n      case 'multiple_choice':\n        return /*#__PURE__*/_jsxDEV(MyBarChart, {\n          data: data\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      case 'rating_scale':\n        return /*#__PURE__*/_jsxDEV(MyBarChart, {\n          data: data\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n      // Assuming you have a LineChart component\n      // Add other cases as needed\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No visualization available for this question type\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Survey Visualizations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), Array.isArray(aggregatedData) && aggregatedData.map((data, index) => renderVisualization(data, data.questionType, index) // Assuming data includes questionType\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyVisualizations, \"7Bg7yvh7i2dxhVkkzUG+u/Sw5Qw=\", false, function () {\n  return [useParams];\n});\n_c = SurveyVisualizations;\nexport default SurveyVisualizations;\nvar _c;\n$RefreshReg$(_c, \"SurveyVisualizations\");","map":{"version":3,"names":["React","useState","useEffect","useParams","MyBarChart","authenticatedFetch","jsxDEV","_jsxDEV","SurveyVisualizations","_s","aggregatedData","setAggregatedData","surveyId","then","response","json","data","console","log","catch","error","renderVisualization","questionType","key","fileName","_jsxFileName","lineNumber","columnNumber","children","className","Array","isArray","map","index","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SurveyVisualizations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MyBarChart from './MyBarChart'; // Import your chart components\nimport authenticatedFetch from './authenticatedFetch';\n\nfunction SurveyVisualizations() {\n  const [aggregatedData, setAggregatedData] = useState([]);\n  const { surveyId } = useParams();\n\n  useEffect(() => {\n    authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/${surveyId}/visualize`)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Server response:', data); // Log the data\n        setAggregatedData(data.aggregatedData); // Set the state variable to the array\n      })\n      .catch(error => console.error('Error fetching aggregated data:', error));\n  }, [surveyId]);\n\n  // Function to select and render the appropriate visualization component\n  const renderVisualization = (data, questionType, key) => {\n    switch (questionType) {\n      case 'multiple_choice':\n        return <MyBarChart key={key} data={data} />;\n      case 'rating_scale':\n        return <MyBarChart key={key} data={data} />; // Assuming you have a LineChart component\n      // Add other cases as needed\n      default:\n        return <p key={key}>No visualization available for this question type</p>;\n    }\n  };\n\n  return (\n    <div className=\"p-4 shadow-lg\">\n      <h2 className=\"text-2xl font-bold mb-4\">Survey Visualizations</h2>\n      {Array.isArray(aggregatedData) && aggregatedData.map((data, index) => (\n  renderVisualization(data, data.questionType, index) // Assuming data includes questionType\n))}\n    </div>\n  );\n}\n\nexport default SurveyVisualizations;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAAEW;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACdG,kBAAkB,CAAE,gFAA+EO,QAAS,YAAW,CAAC,CACrHC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC,CAAC,CAAC;MACvCL,iBAAiB,CAACK,IAAI,CAACN,cAAc,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMS,mBAAmB,GAAGA,CAACL,IAAI,EAAEM,YAAY,EAAEC,GAAG,KAAK;IACvD,QAAQD,YAAY;MAClB,KAAK,iBAAiB;QACpB,oBAAOf,OAAA,CAACH,UAAU;UAAWY,IAAI,EAAEA;QAAK,GAAhBO,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAC7C,KAAK,cAAc;QACjB,oBAAOpB,OAAA,CAACH,UAAU;UAAWY,IAAI,EAAEA;QAAK,GAAhBO,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAE;MAC/C;MACA;QACE,oBAAOpB,OAAA;UAAAqB,QAAA,EAAa;QAAiD,GAAtDL,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsD,CAAC;IAC7E;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAD,QAAA,gBAC5BrB,OAAA;MAAIsB,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAqB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjEG,KAAK,CAACC,OAAO,CAACrB,cAAc,CAAC,IAAIA,cAAc,CAACsB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,KACrEZ,mBAAmB,CAACL,IAAI,EAAEA,IAAI,CAACM,YAAY,EAAEW,KAAK,CAAC,CAAC;IACrD,CAAC;EAAA;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEV;AAAClB,EAAA,CAnCQD,oBAAoB;EAAA,QAENL,SAAS;AAAA;AAAA+B,EAAA,GAFvB1B,oBAAoB;AAqC7B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}