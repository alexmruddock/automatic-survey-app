{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/FilteredSurveysList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport authenticatedFetch from './authenticatedFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilteredSurveysList({\n  userRole\n}) {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [userSegments, setUserSegments] = useState([]);\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      const surveyResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/get-surveys');\n      const surveyData = await surveyResponse.json();\n      if (userRole === 'admin') {\n        setSurveys(surveyData);\n      } else {\n        // Fetch user segments if the user is not an admin\n        const segmentResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments');\n        const segmentData = await segmentResponse.json();\n        setUserSegments(segmentData);\n\n        // Filter surveys based on user segments\n        const filteredSurveys = surveyData.filter(survey => !survey.segments || survey.segments.some(segment => userSegments.includes(segment)));\n        setSurveys(filteredSurveys);\n      }\n    };\n    fetchSurveys();\n  }, [userRole]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Surveys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/survey/${survey._id}`,\n          children: survey.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, survey._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(FilteredSurveysList, \"0oLcNk3ZXq3g57NXlVzZt9g0qrA=\");\n_c = FilteredSurveysList;\nexport default FilteredSurveysList;\nvar _c;\n$RefreshReg$(_c, \"FilteredSurveysList\");","map":{"version":3,"names":["React","useState","useEffect","Link","authenticatedFetch","jsxDEV","_jsxDEV","FilteredSurveysList","userRole","_s","surveys","setSurveys","userSegments","setUserSegments","fetchSurveys","surveyResponse","surveyData","json","segmentResponse","segmentData","filteredSurveys","filter","survey","segments","some","segment","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","to","_id","title","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/FilteredSurveysList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport authenticatedFetch from './authenticatedFetch';\n\nfunction FilteredSurveysList({ userRole }) {\n  const [surveys, setSurveys] = useState([]);\n  const [userSegments, setUserSegments] = useState([]);\n\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      const surveyResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/get-surveys');\n      const surveyData = await surveyResponse.json();\n      \n      if (userRole === 'admin') {\n        setSurveys(surveyData);\n      } else {\n        // Fetch user segments if the user is not an admin\n        const segmentResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments');\n        const segmentData = await segmentResponse.json();\n        setUserSegments(segmentData);\n\n        // Filter surveys based on user segments\n        const filteredSurveys = surveyData.filter(survey => \n          !survey.segments || survey.segments.some(segment => userSegments.includes(segment))\n        );\n        setSurveys(filteredSurveys);\n      }\n    };\n\n    fetchSurveys();\n  }, [userRole]);\n\n  return (\n    <div>\n      <h1>Surveys</h1>\n      <ul>\n        {surveys.map(survey => (\n          <li key={survey._id}>\n            <Link to={`/survey/${survey._id}`}>{survey.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default FilteredSurveysList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,cAAc,GAAG,MAAMX,kBAAkB,CAAC,yEAAyE,CAAC;MAC1H,MAAMY,UAAU,GAAG,MAAMD,cAAc,CAACE,IAAI,CAAC,CAAC;MAE9C,IAAIT,QAAQ,KAAK,OAAO,EAAE;QACxBG,UAAU,CAACK,UAAU,CAAC;MACxB,CAAC,MAAM;QACL;QACA,MAAME,eAAe,GAAG,MAAMd,kBAAkB,CAAC,sEAAsE,CAAC;QACxH,MAAMe,WAAW,GAAG,MAAMD,eAAe,CAACD,IAAI,CAAC,CAAC;QAChDJ,eAAe,CAACM,WAAW,CAAC;;QAE5B;QACA,MAAMC,eAAe,GAAGJ,UAAU,CAACK,MAAM,CAACC,MAAM,IAC9C,CAACA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,IAAIb,YAAY,CAACc,QAAQ,CAACD,OAAO,CAAC,CACpF,CAAC;QACDd,UAAU,CAACS,eAAe,CAAC;MAC7B;IACF,CAAC;IAEDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBzB,OAAA;MAAAqB,QAAA,EACGjB,OAAO,CAACsB,GAAG,CAACV,MAAM,iBACjBhB,OAAA;QAAAqB,QAAA,eACErB,OAAA,CAACH,IAAI;UAAC8B,EAAE,EAAG,WAAUX,MAAM,CAACY,GAAI,EAAE;UAAAP,QAAA,EAAEL,MAAM,CAACa;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADjDT,MAAM,CAACY,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtB,EAAA,CAxCQF,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AA0C5B,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}