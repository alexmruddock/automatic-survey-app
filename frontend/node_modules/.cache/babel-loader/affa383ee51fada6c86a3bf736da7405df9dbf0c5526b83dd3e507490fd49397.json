{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/FilteredSurveysList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport authenticatedFetch from './authenticatedFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FilteredSurveysList({\n  userRole\n}) {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [userSegments, setUserSegments] = useState([]);\n  const [filteredSurveys, setFilteredSurveys] = useState([]); // For the final list of surveys\n\n  // Fetch surveys\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      const surveyResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/get-surveys');\n      const surveyData = await surveyResponse.json();\n      setSurveys(surveyData);\n    };\n    fetchSurveys();\n  }, []);\n\n  // Fetch user segments if not admin\n  useEffect(() => {\n    if (userRole !== 'admin') {\n      const fetchUserSegments = async () => {\n        const segmentResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments');\n        const segmentData = await segmentResponse.json();\n        setUserSegments(segmentData);\n      };\n      fetchUserSegments();\n    }\n  }, [userRole]);\n\n  // Filter surveys based on user segments\n  useEffect(() => {\n    if (userRole === 'admin') {\n      setFilteredSurveys(surveys);\n    } else {\n      const filtered = surveys.filter(survey => !survey.segments || survey.segments.some(segment => userSegments.includes(segment)) //\n      );\n\n      setFilteredSurveys(filtered);\n    }\n  }, [surveys, userSegments, userRole]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Filtered Surveys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full table-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-white border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: survey.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 flex justify-around items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/survey/${survey._id}`,\n                className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-300 ease-in-out\",\n                children: \"View Survey\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, survey._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(FilteredSurveysList, \"IWMOjZDKMmfQZw82Jy1tHrxHlw8=\");\n_c = FilteredSurveysList;\nexport default FilteredSurveysList;\nvar _c;\n$RefreshReg$(_c, \"FilteredSurveysList\");","map":{"version":3,"names":["React","useState","useEffect","Link","authenticatedFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","FilteredSurveysList","userRole","_s","surveys","setSurveys","userSegments","setUserSegments","filteredSurveys","setFilteredSurveys","fetchSurveys","surveyResponse","surveyData","json","fetchUserSegments","segmentResponse","segmentData","filtered","filter","survey","segments","some","segment","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","title","to","_id","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/FilteredSurveysList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport authenticatedFetch from './authenticatedFetch';\n\nfunction FilteredSurveysList({ userRole }) {\n  const [surveys, setSurveys] = useState([]);\n  const [userSegments, setUserSegments] = useState([]);\n  const [filteredSurveys, setFilteredSurveys] = useState([]); // For the final list of surveys\n\n  // Fetch surveys\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      const surveyResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/get-surveys');\n      const surveyData = await surveyResponse.json();\n      setSurveys(surveyData);\n    };\n\n    fetchSurveys();\n  }, []);\n\n  // Fetch user segments if not admin\n  useEffect(() => {\n    if (userRole !== 'admin') {\n      const fetchUserSegments = async () => {\n        const segmentResponse = await authenticatedFetch('https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments');\n        const segmentData = await segmentResponse.json();\n        setUserSegments(segmentData);\n      };\n\n      fetchUserSegments();\n    }\n  }, [userRole]);\n\n  // Filter surveys based on user segments\n  useEffect(() => {\n    if (userRole === 'admin') {\n      setFilteredSurveys(surveys);\n    } else {\n      const filtered = surveys.filter(survey => \n        !survey.segments || survey.segments.some(segment => userSegments.includes(segment)) //\n      );\n      setFilteredSurveys(filtered);\n    }\n  }, [surveys, userSegments, userRole]);\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-4\">Filtered Surveys</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full table-auto\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-4 py-2\">Title</th>\n              <th className=\"px-4 py-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {surveys.map((survey) => (\n              <tr key={survey._id} className=\"bg-white border-b\">\n                <td className=\"px-4 py-2\">{survey.title}</td>\n                <td className=\"px-4 py-2 flex justify-around items-center\">\n                  <Link\n                    to={`/survey/${survey._id}`}\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-300 ease-in-out\"\n                  >\n                    View Survey\n                  </Link>\n                  {/* Admin-specific actions */}\n                  {userRole === \"admin\" && (\n                    <>\n                      {/* Add additional buttons for admin actions like Copy Link, View Responses, Delete */}\n                    </>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default FilteredSurveysList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}