{"ast":null,"code":"// At the top of authenticatedFetch.js\nimport refreshToken from './refreshToken';\nexport default async function authenticatedFetch(url, options = {}) {\n  // Add the access token to the request  \n  let response = await fetch(url, {\n    ...options,\n    headers: {\n      ...options.headers,\n      'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n    }\n  });\n\n  // If the token is expired, try to refresh it\n  if (response.status === 401) {\n    // Assuming 401 status code for expired tokens\n    const refreshed = await refreshToken(); // Call refreshToken() to get a new access token\n    if (refreshed) {\n      // Retry the original request with the new access token\n      response = await fetch(url, {\n        ...options,\n        headers: {\n          ...options.headers,\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n    }\n  }\n  return response;\n}","map":{"version":3,"names":["refreshToken","authenticatedFetch","url","options","response","fetch","headers","localStorage","getItem","status","refreshed"],"sources":["/workspaces/automatic-survey-app/frontend/src/authenticatedFetch.js"],"sourcesContent":["// At the top of authenticatedFetch.js\nimport refreshToken from './refreshToken';\n\nexport default async function authenticatedFetch(url, options = {}) {\n  // Add the access token to the request  \n  let response = await fetch(url, {\n      ...options,\n      headers: {\n        ...options.headers,\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    });\n  \n    // If the token is expired, try to refresh it\n    if (response.status === 401) { // Assuming 401 status code for expired tokens\n      const refreshed = await refreshToken(); // Call refreshToken() to get a new access token\n      if (refreshed) {\n        // Retry the original request with the new access token\n        response = await fetch(url, {\n          ...options,\n          headers: {\n            ...options.headers,\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        });\n      }\n    }\n  \n    return response;\n  }"],"mappings":"AAAA;AACA,OAAOA,YAAY,MAAM,gBAAgB;AAEzC,eAAe,eAAeC,kBAAkBA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAClE;EACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAC5B,GAAGC,OAAO;IACVG,OAAO,EAAE;MACP,GAAGH,OAAO,CAACG,OAAO;MAClB,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;IACjE;EACF,CAAC,CAAC;;EAEF;EACA,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;IAAE;IAC7B,MAAMC,SAAS,GAAG,MAAMV,YAAY,CAAC,CAAC,CAAC,CAAC;IACxC,IAAIU,SAAS,EAAE;MACb;MACAN,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;QAC1B,GAAGC,OAAO;QACVG,OAAO,EAAE;UACP,GAAGH,OAAO,CAACG,OAAO;UAClB,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QACjE;MACF,CAAC,CAAC;IACJ;EACF;EAEA,OAAOJ,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}