{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SurveyVisualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BarChart from './BarChart'; // Import your chart components\nimport authenticatedFetch from './authenticatedFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyVisualizations() {\n  _s();\n  const [aggregatedData, setAggregatedData] = useState([]);\n  const {\n    surveyId\n  } = useParams();\n  useEffect(() => {\n    authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/:surveyId/visualize`).then(response => response.json()).then(data => setAggregatedData(data)).catch(error => console.error('Error fetching aggregated data:', error));\n  }, [surveyId]);\n\n  // Function to select and render the appropriate visualization component\n  const renderVisualization = (data, questionType) => {\n    switch (questionType) {\n      case 'multiple_choice':\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n      case 'rating_scale':\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      // Assuming you have a LineChart component\n      // Add other cases as needed\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No visualization available for this question type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Survey Visualizations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), aggregatedData.map((data, index) =>\n    // Call renderVisualization with the data and its corresponding question type\n    renderVisualization(data, data.questionType) // Assuming data includes questionType\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyVisualizations, \"7Bg7yvh7i2dxhVkkzUG+u/Sw5Qw=\", false, function () {\n  return [useParams];\n});\n_c = SurveyVisualizations;\nexport default SurveyVisualizations;\nvar _c;\n$RefreshReg$(_c, \"SurveyVisualizations\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BarChart","authenticatedFetch","jsxDEV","_jsxDEV","SurveyVisualizations","_s","aggregatedData","setAggregatedData","surveyId","then","response","json","data","catch","error","console","renderVisualization","questionType","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","index","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SurveyVisualizations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BarChart from './BarChart'; // Import your chart components\nimport authenticatedFetch from './authenticatedFetch';\n\nfunction SurveyVisualizations() {\n  const [aggregatedData, setAggregatedData] = useState([]);\n  const { surveyId } = useParams();\n\n  useEffect(() => {\n    authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/:surveyId/visualize`)\n      .then(response => response.json())\n      .then(data => setAggregatedData(data))\n      .catch(error => console.error('Error fetching aggregated data:', error));\n  }, [surveyId]);\n\n  // Function to select and render the appropriate visualization component\n  const renderVisualization = (data, questionType) => {\n    switch (questionType) {\n      case 'multiple_choice':\n        return <BarChart data={data} />;\n      case 'rating_scale':\n        return <BarChart data={data} />; // Assuming you have a LineChart component\n      // Add other cases as needed\n      default:\n        return <p>No visualization available for this question type</p>;\n    }\n  };\n\n  return (\n    <div className=\"p-4 shadow-lg\">\n      <h2 className=\"text-2xl font-bold mb-4\">Survey Visualizations</h2>\n      {aggregatedData.map((data, index) => (\n        // Call renderVisualization with the data and its corresponding question type\n        renderVisualization(data, data.questionType) // Assuming data includes questionType\n      ))}\n    </div>\n  );\n}\n\nexport default SurveyVisualizations;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAAEW;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACdG,kBAAkB,CAAE,kGAAiG,CAAC,CACnHQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,iBAAiB,CAACK,IAAI,CAAC,CAAC,CACrCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMQ,mBAAmB,GAAGA,CAACJ,IAAI,EAAEK,YAAY,KAAK;IAClD,QAAQA,YAAY;MAClB,KAAK,iBAAiB;QACpB,oBAAOd,OAAA,CAACH,QAAQ;UAACY,IAAI,EAAEA;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACjC,KAAK,cAAc;QACjB,oBAAOlB,OAAA,CAACH,QAAQ;UAACY,IAAI,EAAEA;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAE;MACnC;MACA;QACE,oBAAOlB,OAAA;UAAAmB,QAAA,EAAG;QAAiD;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;IACnE;EACF,CAAC;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAD,QAAA,gBAC5BnB,OAAA;MAAIoB,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAqB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjEf,cAAc,CAACkB,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK;IAC9B;IACAT,mBAAmB,CAACJ,IAAI,EAAEA,IAAI,CAACK,YAAY,CAAC,CAAC;IAC9C,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CAjCQD,oBAAoB;EAAA,QAENL,SAAS;AAAA;AAAA2B,EAAA,GAFvBtB,oBAAoB;AAmC7B,eAAeA,oBAAoB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}