{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SegmentUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SegmentUsers() {\n  _s();\n  const {\n    segmentId\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSegmentUsers = async () => {\n      try {\n        const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/users-by-segment/${segmentId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data);\n        } else {\n          alert(\"Error fetching segment users.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching segment users:\", error);\n      }\n      setLoading(false);\n    };\n    fetchSegmentUsers();\n  }, [segmentId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Segment Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-sm text-left text-gray-500 dark:text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"text-xs text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-400\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(SegmentUsers, \"kEyBbe8OR80uGRlr4TDwghy3y4E=\", false, function () {\n  return [useParams];\n});\n_c = SegmentUsers;\nexport default SegmentUsers;\nvar _c;\n$RefreshReg$(_c, \"SegmentUsers\");","map":{"version":3,"names":["React","useState","useEffect","useParams","authenticatedFetch","jsxDEV","_jsxDEV","SegmentUsers","_s","segmentId","users","setUsers","loading","setLoading","fetchSegmentUsers","response","ok","data","json","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","_id","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SegmentUsers.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport authenticatedFetch from \"./authenticatedFetch\";\n\nfunction SegmentUsers() {\n  const { segmentId } = useParams();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSegmentUsers = async () => {\n      try {\n        const response = await authenticatedFetch(\n          `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/users-by-segment/${segmentId}`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data);\n        } else {\n          alert(\"Error fetching segment users.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching segment users:\", error);\n      }\n      setLoading(false);\n    };\n\n    fetchSegmentUsers();\n  }, [segmentId]);\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"p-4 shadow-lg\">\n      <h2 className=\"text-2xl font-bold mb-4\">Segment Users</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-400\">\n            <tr>\n              {/* ... Table headers ... */}\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\n                {/* ... User data cells ... */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default SegmentUsers;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;EACjC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,kBAAkB,CACtC,gFAA+EK,SAAU,EAC5F,CAAC;QACD,IAAIM,QAAQ,CAACC,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCP,QAAQ,CAACM,IAAI,CAAC;QAChB,CAAC,MAAM;UACLE,KAAK,CAAC,+BAA+B,CAAC;QACxC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;MACAP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC5BhB,OAAA;MAAIqB,SAAS,EAAC,yBAAyB;MAAAL,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DpB,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAAAL,QAAA,eAC9BhB,OAAA;QAAOqB,SAAS,EAAC,2DAA2D;QAAAL,QAAA,gBAC1EhB,OAAA;UAAOqB,SAAS,EAAC,iFAAiF;UAAAL,QAAA,eAChGhB,OAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpB,OAAA;UAAAgB,QAAA,EACGZ,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdvB,OAAA;YAAmBqB,SAAS,EAAC;UAAyD,GAA7EE,IAAI,CAACC,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAjDQD,YAAY;EAAA,QACGJ,SAAS;AAAA;AAAA4B,EAAA,GADxBxB,YAAY;AAmDrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}