{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SurveyVisualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BarChart from './BarChart'; // Import your chart components\nimport authenticatedFetch from './authenticatedFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyVisualizations() {\n  _s();\n  const [aggregatedData, setAggregatedData] = useState([]);\n  const {\n    surveyId\n  } = useParams();\n  useEffect(() => {\n    authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/:surveyId/visualize`).then(response => response.json()).then(data => setAggregatedData(data)).catch(error => console.error('Error fetching aggregated data:', error));\n  }, [surveyId]);\n\n  // Render charts based on aggregated data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Survey Visualizations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), aggregatedData.map((data, index) => (console.log(data), /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyVisualizations, \"7Bg7yvh7i2dxhVkkzUG+u/Sw5Qw=\", false, function () {\n  return [useParams];\n});\n_c = SurveyVisualizations;\nexport default SurveyVisualizations;\nvar _c;\n$RefreshReg$(_c, \"SurveyVisualizations\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BarChart","authenticatedFetch","jsxDEV","_jsxDEV","SurveyVisualizations","_s","aggregatedData","setAggregatedData","surveyId","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","log","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SurveyVisualizations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BarChart from './BarChart'; // Import your chart components\nimport authenticatedFetch from './authenticatedFetch';\n\nfunction SurveyVisualizations() {\n  const [aggregatedData, setAggregatedData] = useState([]);\n  const { surveyId } = useParams();\n\n  useEffect(() => {\n    authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/:surveyId/visualize`)\n      .then(response => response.json())\n      .then(data => setAggregatedData(data))\n      .catch(error => console.error('Error fetching aggregated data:', error));\n  }, [surveyId]);\n\n  // Render charts based on aggregated data\n  return (\n    <div className=\"p-4 shadow-lg\">\n      <h2 className=\"text-2xl font-bold mb-4\">Survey Visualizations</h2>\n      {/* Render charts here. Example for a bar chart: */}\n      {aggregatedData.map((data, index) => (\n        console.log(data), \n        <BarChart key={index} data={data} />\n      ))}\n    </div>\n  );\n}\n\nexport default SurveyVisualizations;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAAEW;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACdG,kBAAkB,CAAE,kGAAiG,CAAC,CACnHQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,iBAAiB,CAACK,IAAI,CAAC,CAAC,CACrCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;;EAEd;EACA,oBACEL,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bd,OAAA;MAAIa,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjEf,cAAc,CAACgB,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,MAC9BR,OAAO,CAACS,GAAG,CAACZ,IAAI,CAAC,eACjBT,OAAA,CAACH,QAAQ;MAAaY,IAAI,EAAEA;IAAK,GAAlBW,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CAtBQD,oBAAoB;EAAA,QAENL,SAAS;AAAA;AAAA0B,EAAA,GAFvBrB,oBAAoB;AAwB7B,eAAeA,oBAAoB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}