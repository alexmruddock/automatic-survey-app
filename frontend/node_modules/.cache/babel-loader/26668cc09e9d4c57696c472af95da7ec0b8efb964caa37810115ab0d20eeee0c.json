{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/EditSegment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport authenticatedFetch from './authenticatedFetch'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditSegment({\n  segmentId\n}) {\n  _s();\n  // Assume segmentId is passed as a prop\n  const [segment, setSegment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch the segment data\n  useEffect(() => {\n    const fetchSegment = async () => {\n      try {\n        const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/edit-segment/${segmentId}`);\n        const data = await response.json();\n        setSegment(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching segment:\", error);\n        setLoading(false);\n      }\n    };\n    fetchSegment();\n  }, [segmentId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await authenticatedFetch(`http://localhost:3000/update-segment/${segmentId}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(segment)\n      });\n      if (response.ok) {\n        alert(\"Segment updated successfully\");\n      } else {\n        alert(\"Failed to update segment\");\n      }\n    } catch (error) {\n      console.error(\"Error updating segment:\", error);\n    }\n  };\n  const handleChange = event => {\n    setSegment({\n      ...segment,\n      [event.target.name]: event.target.value\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (!segment) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No segment data found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Segment Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: segment.name || '',\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(EditSegment, \"apLqdRYjrNmhVLMrAcqfWAsLJ4s=\");\n_c = EditSegment;\nexport default EditSegment;\nvar _c;\n$RefreshReg$(_c, \"EditSegment\");","map":{"version":3,"names":["React","useState","useEffect","authenticatedFetch","jsxDEV","_jsxDEV","EditSegment","segmentId","_s","segment","setSegment","loading","setLoading","fetchSegment","response","data","json","error","console","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","ok","alert","handleChange","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/EditSegment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport authenticatedFetch from './authenticatedFetch'; // Adjust the path as necessary\n\nfunction EditSegment({ segmentId }) { // Assume segmentId is passed as a prop\n  const [segment, setSegment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch the segment data\n  useEffect(() => {\n    const fetchSegment = async () => {\n      try {\n        const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/edit-segment/${segmentId}`);\n        const data = await response.json();\n        setSegment(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching segment:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchSegment();\n  }, [segmentId]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await authenticatedFetch(`http://localhost:3000/update-segment/${segmentId}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(segment)\n      });\n\n      if (response.ok) {\n        alert(\"Segment updated successfully\");\n      } else {\n        alert(\"Failed to update segment\");\n      }\n    } catch (error) {\n      console.error(\"Error updating segment:\", error);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSegment({ ...segment, [event.target.name]: event.target.value });\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (!segment) return <div>No segment data found.</div>;\n\n  return (\n    <div>\n      <h1>Edit Segment</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Segment Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={segment.name || ''}\n            onChange={handleChange}\n          />\n        </label>\n        {/* Add other fields as needed */}\n        <button type=\"submit\">Save Changes</button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditSegment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}