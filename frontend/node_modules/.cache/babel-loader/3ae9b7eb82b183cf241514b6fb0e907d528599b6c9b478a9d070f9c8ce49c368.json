{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/CreateSurvey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport BackButton from \"./BackButton\";\nimport SurveyForm from \"./SurveyForm\";\nimport SurveyDisplay from \"./SurveyDisplay\";\nimport { generateSurvey } from \"./generateSurvey\";\nimport { saveSurvey } from \"./saveSurvey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateSurvey() {\n  _s();\n  const [survey, setSurvey] = useState(null);\n  const [segments, setSegments] = useState([]); // For storing available segments\n  const [selectedSegments, setSelectedSegments] = useState([]); // For storing selected segment IDs\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch segments when the component mounts\n    authenticatedFetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments\").then(response => response.json()).then(data => setSegments(data)).catch(error => console.error(\"Error fetching segments:\", error));\n  }, []);\n  const handleGenerate = async surveyData => {\n    console.log(\"Received survey data: \", surveyData);\n    const description = surveyData.description;\n    try {\n      const generatedSurvey = await generateSurvey(description);\n      setSurvey(generatedSurvey);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const handleSegmentChange = selected => {\n    setSelectedSegments(selected); // Update the state with selected segment IDs\n  };\n\n  const handleSave = async () => {\n    try {\n      // Include selectedSegments in the survey data\n      const surveyDataWithSegments = {\n        ...survey,\n        segments: selectedSegments\n      };\n      const savedData = await saveSurvey(surveyDataWithSegments);\n      console.log(\"Saved Survey: \", savedData);\n\n      // provide user feedback and redirect \n      alert(\"Survey saved successfully!\");\n      navigate('/');\n    } catch (error) {\n      console.error(error.message);\n      alert(\"Error saving survey!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SurveyForm, {\n      onSubmit: handleGenerate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SurveyDisplay, {\n      survey: survey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectSegments, {\n      segments: segments,\n      onSegmentChange: handleSegmentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), survey && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n      children: \"Save Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n// Component for segment selection\n_s(CreateSurvey, \"QWwKBszuKjpmkw810MdvgHi2HQs=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateSurvey;\nfunction SelectSegments({\n  segments,\n  onSegmentChange\n}) {\n  const handleSelectionChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    onSegmentChange(selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"segments\",\n      children: \"Select Segments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      id: \"segments\",\n      onChange: handleSelectionChange,\n      className: \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\",\n      children: segments.map(segment => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: segment._id,\n        children: segment.name\n      }, segment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SelectSegments;\nexport default CreateSurvey;\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateSurvey\");\n$RefreshReg$(_c2, \"SelectSegments\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authenticatedFetch","BackButton","SurveyForm","SurveyDisplay","generateSurvey","saveSurvey","jsxDEV","_jsxDEV","CreateSurvey","_s","survey","setSurvey","segments","setSegments","selectedSegments","setSelectedSegments","navigate","then","response","json","data","catch","error","console","handleGenerate","surveyData","log","description","generatedSurvey","message","handleSegmentChange","selected","handleSave","surveyDataWithSegments","savedData","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","SelectSegments","onSegmentChange","onClick","_c","handleSelectionChange","e","selectedOptions","Array","from","target","option","value","htmlFor","multiple","id","onChange","map","segment","_id","name","_c2","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/CreateSurvey.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport BackButton from \"./BackButton\";\nimport SurveyForm from \"./SurveyForm\";\nimport SurveyDisplay from \"./SurveyDisplay\";\nimport { generateSurvey } from \"./generateSurvey\";\nimport { saveSurvey } from \"./saveSurvey\";\n\nfunction CreateSurvey() {\n  const [survey, setSurvey] = useState(null);\n  const [segments, setSegments] = useState([]); // For storing available segments\n  const [selectedSegments, setSelectedSegments] = useState([]); // For storing selected segment IDs\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch segments when the component mounts\n    authenticatedFetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments\")\n      .then(response => response.json())\n      .then(data => setSegments(data))\n      .catch(error => console.error(\"Error fetching segments:\", error));\n  }, []);\n\n  const handleGenerate = async (surveyData) => {\n    console.log(\"Received survey data: \", surveyData);\n    const description = surveyData.description;\n    try {\n      const generatedSurvey = await generateSurvey(description);\n      setSurvey(generatedSurvey);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleSegmentChange = (selected) => {\n    setSelectedSegments(selected); // Update the state with selected segment IDs\n  };\n\n  const handleSave = async () => {\n    try {\n      // Include selectedSegments in the survey data\n      const surveyDataWithSegments = { ...survey, segments: selectedSegments };\n      const savedData = await saveSurvey(surveyDataWithSegments);\n      console.log(\"Saved Survey: \", savedData);\n\n      // provide user feedback and redirect \n      alert(\"Survey saved successfully!\");\n      navigate('/');\n    } catch (error) {\n      console.error(error.message);\n      alert(\"Error saving survey!\");\n    }\n  };\n\n  return (\n    <div>\n      <BackButton />\n      <SurveyForm onSubmit={handleGenerate} />\n      <div className=\"h-8\"></div>\n      <SurveyDisplay survey={survey} />\n      <SelectSegments segments={segments} onSegmentChange={handleSegmentChange} />\n      {survey && (\n        <button\n          onClick={handleSave}\n          className=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n        >\n          Save Survey\n        </button>\n      )}\n    </div>\n  );\n}\n\n// Component for segment selection\nfunction SelectSegments({ segments, onSegmentChange }) {\n  const handleSelectionChange = (e) => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    onSegmentChange(selectedOptions);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"segments\">Select Segments:</label>\n      <select multiple id=\"segments\" onChange={handleSelectionChange} className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\">\n        {segments.map(segment => (\n          <option key={segment._id} value={segment._id}>{segment.name}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\n\nexport default CreateSurvey;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}