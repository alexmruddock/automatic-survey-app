{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm({\n  setUserDetails\n}) {\n  _s();\n  // Initialize state variables\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Used to redirect the user\n\n  const handleLogin = async () => {\n    const response = await fetch('https://bookish-pancake-q7w7vvr66ggfxp5j-3000.app.github.dev/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      console.log(\"Data: \", data);\n      // Store the tokens in localStorage\n      localStorage.setItem('accessToken', data.accessToken);\n      console.log(\"Token: \", data.accessToken); // Log the token in the console for debugging purposes\n      localStorage.setItem('userEmail', email); // Store the user's email in localStorage\n      // fetch user role here and update state in App\n      fetchUserRole().then(role => setUserDetails(email, role));\n      // Navigate to the home page\n      navigate('/');\n    } else {\n      console.error('Login failed:', data.message);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n\n    // Send form data to the API for registration\n    const response = await fetch('https://bookish-pancake-q7w7vvr66ggfxp5j-3000.app.github.dev/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      await handleLogin(); // If registration is successful, log in to the app automatically\n      console.log('Registration successful');\n    } else {\n      const message = await response.text();\n      console.error('Registration failed:', message);\n    }\n  };\n\n  // JSX returned by the component\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistrationForm, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nasync function fetchUserRole() {\n  const response = await fetch(\"https://bookish-pancake-q7w7vvr66ggfxp5j-3000.app.github.dev/fetch-user\", {\n    headers: {\n      \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    return data.role;\n  }\n  return null;\n}\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegistrationForm","setUserDetails","_s","email","setEmail","password","setPassword","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","localStorage","setItem","accessToken","fetchUserRole","then","role","error","message","handleSubmit","event","preventDefault","text","onSubmit","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","getItem","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/RegistrationForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction RegistrationForm({ setUserDetails }) {\n    // Initialize state variables\n    const [email, setEmail] = useState(''); \n    const [password, setPassword] = useState('');\n    const navigate = useNavigate(); // Used to redirect the user\n\n    const handleLogin = async () => {\n        const response = await fetch('https://bookish-pancake-q7w7vvr66ggfxp5j-3000.app.github.dev/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n            console.log(\"Data: \", data);\n            // Store the tokens in localStorage\n            localStorage.setItem('accessToken', data.accessToken);\n            console.log(\"Token: \", data.accessToken); // Log the token in the console for debugging purposes\n            localStorage.setItem('userEmail', email); // Store the user's email in localStorage\n            // fetch user role here and update state in App\n            fetchUserRole().then(role => setUserDetails(email, role)); \n            // Navigate to the home page\n            navigate('/'); \n        } else {\n            console.error('Login failed:', data.message);\n        }\n    };\n\n    // Handle form submission\n    const handleSubmit = async (event) => {\n        event.preventDefault(); // Prevent default form submission\n        \n        // Send form data to the API for registration\n        const response = await fetch('https://bookish-pancake-q7w7vvr66ggfxp5j-3000.app.github.dev/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        if (response.ok) {\n            await handleLogin(); // If registration is successful, log in to the app automatically\n            console.log('Registration successful');\n        } else {\n            const message = await response.text();\n            console.error('Registration failed:', message);\n        }\n    };\n\n    // JSX returned by the component\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" />\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\n            <button type=\"submit\">Register</button>\n        </form>\n    );\n}\n\nasync function fetchUserRole() {\n    const response = await fetch(\"https://bookish-pancake-q7w7vvr66ggfxp5j-3000.app.github.dev/fetch-user\", {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`,\n      },\n    });\n    if (response.ok) {\n      const data = await response.json();\n      return data.role;\n    }\n    return null;\n  }\n\nexport default RegistrationForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}