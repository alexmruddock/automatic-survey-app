{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/EditSurvey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport EditSurveyQuestion from \"./EditSurveyQuestion\";\nimport authenticatedFetch from \"./authenticatedFetch\"; // Assuming you have this utility for authenticated requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditSurvey() {\n  _s();\n  const {\n    surveyId\n  } = useParams();\n  const [surveyData, setSurveyData] = useState(null);\n  const navigate = useNavigate();\n\n  // get survey by id\n  useEffect(() => {\n    const fetchSurveyData = async () => {\n      try {\n        const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/retrieve-survey/${surveyId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setSurveyData(data);\n        } else {\n          console.error(\"Failed to fetch survey data.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching survey data:\", error);\n      }\n    };\n    fetchSurveyData();\n  }, [surveyId]);\n\n  // update survey question\n  const handleQuestionChange = (index, newText) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[index].question = newText;\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n\n  // update survey option\n  const handleOptionChange = (questionIndex, optionIndex, newOptionText) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options[optionIndex] = newOptionText;\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n\n  // add survey option\n  const handleAddOption = questionIndex => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.push(\"\");\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n\n  // remove survey option\n  const handleRemoveOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.splice(optionIndex, 1);\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n\n  // update survey\n  const handleSurveySubmit = async () => {\n    try {\n      const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/update-survey/${surveyId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(surveyData)\n      });\n      if (response.ok) {\n        alert(\"Survey updated successfully.\");\n        navigate(\"/surveys\");\n      } else {\n        alert(\"Failed to update survey.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating survey:\", error);\n      alert(\"Error updating survey.\");\n    }\n  };\n  if (!surveyData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading survey data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 px-4 py-5 sm:p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-gray-900 mb-4\",\n      children: \"Edit Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"surveyTitle\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Survey Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"surveyTitle\",\n          type: \"text\",\n          value: surveyData.title,\n          onChange: e => setSurveyData({\n            ...surveyData,\n            title: e.target.value\n          }),\n          className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"surveyDescription\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Survey Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"surveyDescription\",\n          value: surveyData.description,\n          onChange: e => setSurveyData({\n            ...surveyData,\n            description: e.target.value\n          }),\n          className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: surveyData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(EditSurveyQuestion, {\n        question: question,\n        index: index,\n        onQuestionChange: handleQuestionChange,\n        onOptionChange: handleOptionChange,\n        onAddOption: handleAddOption,\n        onRemoveOption: handleRemoveOption\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSurveySubmit,\n      className: \"mt-4 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300 ease-in-out\",\n      children: \"Submit Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(EditSurvey, \"Bm+I8m2ICFkfwQVZ/bX7oi2a69o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditSurvey;\nexport default EditSurvey;\nvar _c;\n$RefreshReg$(_c, \"EditSurvey\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","EditSurveyQuestion","authenticatedFetch","jsxDEV","_jsxDEV","EditSurvey","_s","surveyId","surveyData","setSurveyData","navigate","fetchSurveyData","response","ok","data","json","console","error","handleQuestionChange","index","newText","updatedQuestions","questions","question","handleOptionChange","questionIndex","optionIndex","newOptionText","options","handleAddOption","push","handleRemoveOption","splice","handleSurveySubmit","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","type","value","title","onChange","e","target","description","rows","map","onQuestionChange","onOptionChange","onAddOption","onRemoveOption","onClick","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/EditSurvey.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport EditSurveyQuestion from \"./EditSurveyQuestion\";\nimport authenticatedFetch from \"./authenticatedFetch\"; // Assuming you have this utility for authenticated requests\n\nfunction EditSurvey() {\n  const { surveyId } = useParams();\n  const [surveyData, setSurveyData] = useState(null);\n  const navigate = useNavigate();\n\n  // get survey by id\n  useEffect(() => {\n    const fetchSurveyData = async () => {\n      try {\n        const response = await authenticatedFetch(\n          `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/retrieve-survey/${surveyId}`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setSurveyData(data);\n        } else {\n          console.error(\"Failed to fetch survey data.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching survey data:\", error);\n      }\n    };\n\n    fetchSurveyData();\n  }, [surveyId]);\n\n  // update survey question\n  const handleQuestionChange = (index, newText) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[index].question = newText;\n    setSurveyData({ ...surveyData, questions: updatedQuestions });\n  };\n\n  // update survey option\n  const handleOptionChange = (questionIndex, optionIndex, newOptionText) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options[optionIndex] = newOptionText;\n    setSurveyData({ ...surveyData, questions: updatedQuestions });\n  };\n\n  // add survey option\n  const handleAddOption = (questionIndex) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.push(\"\");\n    setSurveyData({ ...surveyData, questions: updatedQuestions });\n  };\n\n  // remove survey option\n  const handleRemoveOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.splice(optionIndex, 1);\n    setSurveyData({ ...surveyData, questions: updatedQuestions });\n  };\n\n  // update survey\n  const handleSurveySubmit = async () => {\n    try {\n      const response = await authenticatedFetch(\n        `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/update-survey/${surveyId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(surveyData),\n        }\n      );\n      if (response.ok) {\n        alert(\"Survey updated successfully.\");\n        navigate(\"/surveys\");\n      } else {\n        alert(\"Failed to update survey.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating survey:\", error);\n      alert(\"Error updating survey.\");\n    }\n  };\n\n  if (!surveyData) {\n    return <p>Loading survey data...</p>;\n  }\n\n  return (\n    <div className=\"space-y-6 px-4 py-5 sm:p-6\">\n      <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Edit Survey</h2>\n  \n      <div className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"surveyTitle\" className=\"block text-sm font-medium text-gray-700\">\n            Survey Title\n          </label>\n          <input\n            id=\"surveyTitle\"\n            type=\"text\"\n            value={surveyData.title}\n            onChange={(e) => setSurveyData({ ...surveyData, title: e.target.value })}\n            className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          />\n        </div>\n  \n        <div>\n          <label htmlFor=\"surveyDescription\" className=\"block text-sm font-medium text-gray-700\">\n            Survey Description\n          </label>\n          <textarea\n            id=\"surveyDescription\"\n            value={surveyData.description}\n            onChange={(e) => setSurveyData({ ...surveyData, description: e.target.value })}\n            className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n            rows=\"4\"\n          />\n        </div>\n      </div>\n  \n      <div className=\"space-y-4\">\n        {surveyData.questions.map((question, index) => (\n          <EditSurveyQuestion\n            key={index}\n            question={question}\n            index={index}\n            onQuestionChange={handleQuestionChange}\n            onOptionChange={handleOptionChange}\n            onAddOption={handleAddOption}\n            onRemoveOption={handleRemoveOption}\n          />\n        ))}\n      </div>\n  \n      <button\n        onClick={handleSurveySubmit}\n        className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300 ease-in-out\"\n      >\n        Submit Changes\n      </button>\n    </div>\n  );  \n}\n\nexport default EditSurvey;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}