{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SegmentManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SegmentManager() {\n  _s();\n  const [segments, setSegments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newSegment, setNewSegment] = useState({\n    name: \"\",\n    description: \"\",\n    criteria: {}\n  });\n\n  // Fetch all segments\n  useEffect(() => {\n    const fetchSegments = async () => {\n      try {\n        const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments`);\n        const data = await response.json();\n        setSegments(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching segments:\", error);\n        setLoading(false);\n      }\n    };\n    fetchSegments();\n  }, []);\n  const handleNewSegmentChange = event => {\n    setNewSegment({\n      ...newSegment,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleNewSegmentSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/create-segment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newSegment)\n      });\n      if (response.ok) {\n        alert(\"Segment created successfully\");\n        // Refresh the segments list\n        // ... fetchSegments() can be called here\n      } else {\n        alert(\"Failed to create segment\");\n      }\n    } catch (error) {\n      console.error(\"Error creating segment:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"text-4xl font-bold text-center text-blue-600\",\n      children: \"Segment Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewSegmentSubmit,\n      class: \"max-w-md mx-auto mt-8 bg-white shadow-md rounded-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"block text-gray-700 font-medium mb-2\",\n        children: [\"New Segment Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: newSegment.name,\n          onChange: handleNewSegmentChange,\n          class: \"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"block text-gray-700 font-medium mb-2\",\n        children: [\"New Segment Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: newSegment.description,\n          onChange: handleNewSegmentChange,\n          class: \"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"block text-gray-700 font-medium mb-2\",\n        children: [\"New Segment Criteria:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"criteria\",\n          value: newSegment.criteria,\n          onChange: handleNewSegmentChange,\n          class: \"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"block w-full mt-4 bg-blue-600 text-white font-bold rounded-md px-4 py-3 hover:bg-blue-700\",\n        children: \"Create Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"text-3xl font-bold text-center text-gray-800 mt-12\",\n      children: \"Existing Segments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), segments.map(segment => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"max-w-md mx-auto mt-8 bg-gray-100 shadow-md rounded-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"text-2xl font-medium text-gray-900\",\n        children: segment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"text-gray-700 mt-2\",\n        children: segment.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          /* logic to edit this segment */\n        },\n        class: \"block w-full mt-4 bg-yellow-600 text-white font-bold rounded-md px-4 py-3 hover:bg-yellow-700\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, segment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(SegmentManager, \"DRZcdhr1F8opzEyTdHtMe2eQYfo=\");\n_c = SegmentManager;\nexport default SegmentManager;\nvar _c;\n$RefreshReg$(_c, \"SegmentManager\");","map":{"version":3,"names":["React","useState","useEffect","authenticatedFetch","jsxDEV","_jsxDEV","SegmentManager","_s","segments","setSegments","loading","setLoading","newSegment","setNewSegment","name","description","criteria","fetchSegments","response","data","json","error","console","handleNewSegmentChange","event","target","value","handleNewSegmentSubmit","preventDefault","method","headers","body","JSON","stringify","ok","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","class","onSubmit","type","onChange","map","segment","onClick","_id","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SegmentManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport authenticatedFetch from \"./authenticatedFetch\";\n\nfunction SegmentManager() {\n  const [segments, setSegments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newSegment, setNewSegment] = useState({\n    name: \"\",\n    description: \"\",\n    criteria: {},\n  });\n\n  // Fetch all segments\n  useEffect(() => {\n    const fetchSegments = async () => {\n      try {\n        const response = await authenticatedFetch(\n          `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/segments`\n        );\n        const data = await response.json();\n        setSegments(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching segments:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchSegments();\n  }, []);\n\n  const handleNewSegmentChange = (event) => {\n    setNewSegment({ ...newSegment, [event.target.name]: event.target.value });\n  };\n\n  const handleNewSegmentSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await authenticatedFetch(\n        `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/create-segment`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newSegment),\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Segment created successfully\");\n        // Refresh the segments list\n        // ... fetchSegments() can be called here\n      } else {\n        alert(\"Failed to create segment\");\n      }\n    } catch (error) {\n      console.error(\"Error creating segment:\", error);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div class=\"container mx-auto p-4\">\n      <h1 class=\"text-4xl font-bold text-center text-blue-600\">\n        Segment Manager\n      </h1>\n      \n      <form\n        onSubmit={handleNewSegmentSubmit}\n        class=\"max-w-md mx-auto mt-8 bg-white shadow-md rounded-md p-6\"\n      >\n        <label class=\"block text-gray-700 font-medium mb-2\">\n          New Segment Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={newSegment.name}\n            onChange={handleNewSegmentChange}\n            class=\"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\"\n          />\n        </label>\n        <label class=\"block text-gray-700 font-medium mb-2\">\n          New Segment Description:\n          <input \n            type=\"text\" \n            name=\"description\" \n            value={newSegment.description} \n            onChange={handleNewSegmentChange} \n            class=\"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\" />\n        </label>\n        <label class=\"block text-gray-700 font-medium mb-2\">\n          New Segment Criteria:\n          <input \n            type=\"text\" \n            name=\"criteria\" \n            value={newSegment.criteria} \n            onChange={handleNewSegmentChange} \n            class=\"block w-full mt-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-600 focus:border-blue-600\" />\n        </label>\n        <button\n          type=\"submit\"\n          class=\"block w-full mt-4 bg-blue-600 text-white font-bold rounded-md px-4 py-3 hover:bg-blue-700\"\n        >\n          Create Segment\n        </button>\n      </form>\n\n      <h2 class=\"text-3xl font-bold text-center text-gray-800 mt-12\">\n        Existing Segments\n      </h2>\n      {segments.map((segment) => (\n        <div\n          key={segment._id}\n          class=\"max-w-md mx-auto mt-8 bg-gray-100 shadow-md rounded-md p-6\"\n        >\n          <h3 class=\"text-2xl font-medium text-gray-900\">{segment.name}</h3>\n          <p class=\"text-gray-700 mt-2\">{segment.description}</p>\n          {/* Display segment criteria overview */}\n          <button\n            onClick={() => {\n              /* logic to edit this segment */\n            }}\n            class=\"block w-full mt-4 bg-yellow-600 text-white font-bold rounded-md px-4 py-3 hover:bg-yellow-700\"\n          >\n            Edit\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default SegmentManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}