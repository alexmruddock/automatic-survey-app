{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SurveyDisplayById.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyDisplayById() {\n  _s();\n  const [survey, setSurvey] = useState(null);\n  const [responses, setResponses] = useState({});\n  const {\n    surveyId\n  } = useParams();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const [userRole, setUserRole] = useState(null);\n  const userEmail = localStorage.getItem(\"userEmail\");\n  const surveyCountKey = `surveyCount_${surveyId}_${userEmail}`;\n\n  // Retrieve the submission count from local storage\n  const [submissionCount, setSubmissionCount] = useState(parseInt(localStorage.getItem(surveyCountKey)) || 0 // If the key doesn't exist, default to 0\n  );\n\n  useEffect(() => {\n    fetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/retrieve-survey/${surveyId}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setSurvey(data)).catch(error => console.error(\"Error fetching survey:\", error));\n  }, [surveyId]);\n\n  // New useEffect for fetching user role\n  useEffect(() => {\n    const fetchUserRole = async () => {\n      try {\n        const response = await authenticatedFetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/fetch-user\");\n        if (response.ok) {\n          const userData = await response.json();\n          setUserRole(userData.role);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user role:\", error);\n      }\n    };\n    fetchUserRole();\n  }, []);\n  const handleEdit = () => {\n    navigate(`/edit-survey/${surveyId}`);\n  };\n  function handleResponseChange(questionIndex, value) {\n    setResponses({\n      ...responses,\n      [questionIndex]: value\n    });\n  }\n  function handleSubmit() {\n    const answers = Object.entries(responses).map(([questionIndex, answer]) => {\n      return {\n        question: survey.questions[questionIndex].question,\n        answer\n      };\n    });\n    submitSurvey(surveyId, answers).then(() => {\n      setResponses({}); // Clear responses\n      setIsSubmitted(true); // Set isSubmitted to true\n\n      // update submission count\n      const newCount = submissionCount + 1; // Increment the submission count\n      setSubmissionCount(newCount); // Update the state\n      localStorage.setItem(surveyCountKey, newCount.toString()); // Update local storage\n\n      setTimeout(() => {\n        navigate(\"/\");\n      }, 3000);\n      alert(\"Survey submitted successfully\");\n    }).catch(error => {\n      console.error(\"Error submitting survey:\", error);\n      alert(\"Error submitting survey\");\n    });\n  }\n\n  // Include the renderQuestion function from SurveyDisplay or make it a shared utility\n  function renderQuestion(question, index) {\n    switch (question.question_type) {\n      case \"multiple_choice\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium text-gray-700\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mt-2\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${index}`,\n                value: option,\n                className: \"form-radio\",\n                onChange: e => handleResponseChange(index, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this);\n      case \"rating\":\n      case \"rating_scale\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium text-gray-700\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"10\",\n            className: \"mt-2 w-full\",\n            onChange: e => handleResponseChange(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this);\n      case \"open_ended\":\n      case \"open_text\":\n      case \"text\":\n        // Combining as they are similar\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium text-gray-700\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: `question-${index}`,\n            className: \"mt-2 w-full p-2 border rounded\",\n            rows: \"3\",\n            onChange: e => handleResponseChange(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: [\"Unsupported question type: \", question.type]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n    }\n  }\n  if (!survey) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 text-center my-4\",\n      children: \"Loading survey...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Reuse the render logic from SurveyDisplay\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for completing the survey!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Redirecting to homepage...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      className: \"bg-blue-600 hover:bg-blue-800 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ease-in-out mb-4\",\n      children: \"Edit Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold text-gray-800 my-4\",\n      children: survey.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm text-gray-600\",\n      children: [\"Times Completed: \", submissionCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-700 text-lg my-4\",\n      children: survey.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), survey.questions.map((question, index) => renderQuestion(question, index)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"mt-6 bg-blue-600 hover:bg-blue-800 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ease-in-out\",\n      children: \"Submit Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyDisplayById, \"Xd0lDc14H8htdZ8wdzWUulP6Tw4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SurveyDisplayById;\nasync function submitSurvey(surveyId, answers) {\n  const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email from local storage\n\n  const response = await fetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/submit-response\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      surveyId,\n      answers,\n      userEmail\n    }) // Include userEmail in the request body\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Error submitting survey response: \" + (await response.text()));\n  }\n  return response.json();\n}\nexport default SurveyDisplayById;\nvar _c;\n$RefreshReg$(_c, \"SurveyDisplayById\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","BackButton","authenticatedFetch","jsxDEV","_jsxDEV","SurveyDisplayById","_s","survey","setSurvey","responses","setResponses","surveyId","isSubmitted","setIsSubmitted","navigate","userRole","setUserRole","userEmail","localStorage","getItem","surveyCountKey","submissionCount","setSubmissionCount","parseInt","fetch","then","response","ok","Error","status","json","data","catch","error","console","fetchUserRole","userData","role","handleEdit","handleResponseChange","questionIndex","value","handleSubmit","answers","Object","entries","map","answer","question","questions","submitSurvey","newCount","setItem","toString","setTimeout","alert","renderQuestion","index","question_type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","option","type","name","onChange","e","target","min","max","rows","onClick","title","description","_c","method","headers","body","JSON","stringify","text","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SurveyDisplayById.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport \"./index.css\";\n\nfunction SurveyDisplayById() {\n  const [survey, setSurvey] = useState(null);\n  const [responses, setResponses] = useState({});\n  const { surveyId } = useParams();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  \n  const [userRole, setUserRole] = useState(null);\n\n  const userEmail = localStorage.getItem(\"userEmail\");\n  const surveyCountKey = `surveyCount_${surveyId}_${userEmail}`;\n\n  // Retrieve the submission count from local storage\n  const [submissionCount, setSubmissionCount] = useState(\n    parseInt(localStorage.getItem(surveyCountKey)) || 0 // If the key doesn't exist, default to 0\n  );\n\n  useEffect(() => {\n    fetch(\n      `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/retrieve-survey/${surveyId}`\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => setSurvey(data))\n      .catch((error) => console.error(\"Error fetching survey:\", error));\n  }, [surveyId]);\n\n  // New useEffect for fetching user role\n  useEffect(() => {\n    const fetchUserRole = async () => {\n        try {\n            const response = await authenticatedFetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/fetch-user\");\n            if (response.ok) {\n                const userData = await response.json();\n                setUserRole(userData.role);\n            }\n        } catch (error) {\n            console.error(\"Error fetching user role:\", error);\n        }\n    };\n\n    fetchUserRole();\n}, []);\n\n  const handleEdit = () => {\n    navigate(`/edit-survey/${surveyId}`);\n  };\n\n  function handleResponseChange(questionIndex, value) {\n    setResponses({ ...responses, [questionIndex]: value });\n  }\n\n  function handleSubmit() {\n    const answers = Object.entries(responses).map(([questionIndex, answer]) => {\n      return { question: survey.questions[questionIndex].question, answer };\n    });\n\n    submitSurvey(surveyId, answers)\n      .then(() => {\n        setResponses({}); // Clear responses\n        setIsSubmitted(true); // Set isSubmitted to true\n\n        // update submission count\n        const newCount = submissionCount + 1; // Increment the submission count\n        setSubmissionCount(newCount); // Update the state\n        localStorage.setItem(surveyCountKey, newCount.toString()); // Update local storage\n\n        setTimeout(() => {\n          navigate(\"/\");\n        }, 3000);\n        alert(\"Survey submitted successfully\");\n      })\n      .catch((error) => {\n        console.error(\"Error submitting survey:\", error);\n        alert(\"Error submitting survey\");\n      });\n  }\n\n  // Include the renderQuestion function from SurveyDisplay or make it a shared utility\n  function renderQuestion(question, index) {\n    switch (question.question_type) {\n      case \"multiple_choice\":\n        return (\n          <div key={index} className=\"mb-4\">\n            <p className=\"font-medium text-gray-700\">{question.question}</p>\n            <div className=\"flex flex-col mt-2\">\n              {question.options.map((option) => (\n                <label key={option} className=\"inline-flex items-center mt-1\">\n                  <input\n                    type=\"radio\"\n                    name={`question-${index}`}\n                    value={option}\n                    className=\"form-radio\"\n                    onChange={(e) =>\n                      handleResponseChange(index, e.target.value)\n                    }\n                  />\n                  <span className=\"ml-2\">{option}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n        );\n\n      case \"rating\":\n      case \"rating_scale\":\n        return (\n          <div key={index} className=\"mb-4\">\n            <p className=\"font-medium text-gray-700\">{question.question}</p>\n            <div className=\"flex justify-between\">\n              <span>0</span>\n              <span>5</span>\n              <span>10</span>\n            </div>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"10\"\n              className=\"mt-2 w-full\"\n              onChange={(e) => handleResponseChange(index, e.target.value)}\n            />\n          </div>\n        );\n\n      case \"open_ended\":\n      case \"open_text\":\n      case \"text\": // Combining as they are similar\n        return (\n          <div key={index} className=\"mb-4\">\n            <p className=\"font-medium text-gray-700\">{question.question}</p>\n            <textarea\n              name={`question-${index}`}\n              className=\"mt-2 w-full p-2 border rounded\"\n              rows=\"3\"\n              onChange={(e) => handleResponseChange(index, e.target.value)}\n            ></textarea>\n          </div>\n        );\n\n      default:\n        return (\n          <p key={index} className=\"text-red-500\">\n            Unsupported question type: {question.type}\n          </p>\n        );\n    }\n  }\n\n  if (!survey) {\n    return <p className=\"text-gray-600 text-center my-4\">Loading survey...</p>;\n  }\n\n  // Reuse the render logic from SurveyDisplay\n  if (isSubmitted) {\n    return (\n      <div className=\"thank-you-message\">\n        <p>Thank you for completing the survey!</p>\n        <p>Redirecting to homepage...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\n      <BackButton />\n\n      {userRole === \"admin\" && (\n        <button \n          onClick={handleEdit}\n          className=\"bg-blue-600 hover:bg-blue-800 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ease-in-out mb-4\"\n        >\n          Edit Survey\n        </button>\n      )} \n\n      <h2 className=\"text-3xl font-semibold text-gray-800 my-4\">\n        {survey.title}\n      </h2>\n      <span className=\"text-sm text-gray-600\">\n        Times Completed: {submissionCount}\n      </span>\n      <p className=\"text-gray-700 text-lg my-4\">{survey.description}</p>\n\n      {survey.questions.map((question, index) =>\n        renderQuestion(question, index)\n      )}\n\n      <button\n        onClick={handleSubmit}\n        className=\"mt-6 bg-blue-600 hover:bg-blue-800 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ease-in-out\"\n      >\n        Submit Survey\n      </button>\n    </div>\n  );\n}\n\nasync function submitSurvey(surveyId, answers) {\n  const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email from local storage\n\n  const response = await fetch(\n    \"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/submit-response\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ surveyId, answers, userEmail }), // Include userEmail in the request body\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(\n      \"Error submitting survey response: \" + (await response.text())\n    );\n  }\n\n  return response.json();\n}\n\nexport default SurveyDisplayById;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}