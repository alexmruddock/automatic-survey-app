{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/MyHistogram.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyHistogram({\n  data\n}) {\n  // Format the data for the histogram here\n  // Assuming data is an array of numbers\n\n  // Create a data structure suitable for the histogram\n  const histogramData = data.map(value => ({\n    value\n  }));\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 600,\n    height: 300,\n    data: histogramData,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"value\",\n      fill: \"#82ca9d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = MyHistogram;\nexport default MyHistogram;\nvar _c;\n$RefreshReg$(_c, \"MyHistogram\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","jsxDEV","_jsxDEV","MyHistogram","data","histogramData","map","value","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","fill","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/MyHistogram.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nfunction MyHistogram({ data }) {\n  // Format the data for the histogram here\n  // Assuming data is an array of numbers\n\n  // Create a data structure suitable for the histogram\n  const histogramData = data.map((value) => ({ value }));\n\n  return (\n    <BarChart width={600} height={300} data={histogramData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"value\" />\n      <YAxis />\n      <Tooltip />\n      <Bar dataKey=\"value\" fill=\"#82ca9d\" />\n    </BarChart>\n  );\n}\n\nexport default MyHistogram;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,SAASC,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7B;EACA;;EAEA;EACA,MAAMC,aAAa,GAAGD,IAAI,CAACE,GAAG,CAAEC,KAAK,KAAM;IAAEA;EAAM,CAAC,CAAC,CAAC;EAEtD,oBACEL,OAAA,CAACP,QAAQ;IAACa,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAACL,IAAI,EAAEC,aAAc;IAAAK,QAAA,gBACrDR,OAAA,CAACH,aAAa;MAACY,eAAe,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCb,OAAA,CAACL,KAAK;MAACmB,OAAO,EAAC;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBb,OAAA,CAACJ,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTb,OAAA,CAACF,OAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXb,OAAA,CAACN,GAAG;MAACoB,OAAO,EAAC,OAAO;MAACC,IAAI,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEf;AAACG,EAAA,GAhBQf,WAAW;AAkBpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}