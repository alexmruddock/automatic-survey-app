{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm({\n  setUserDetails\n}) {\n  _s();\n  // Initialize state variables\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Used to redirect the user\n\n  const handleLogin = async () => {\n    const response = await fetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      console.log(\"Data: \", data);\n      // Store the tokens in localStorage\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      console.log(\"Token: \", data.accessToken); // Log the token in the console for debugging purposes\n      localStorage.setItem(\"userEmail\", email); // Store the user's email in localStorage\n      // fetch user role here and update state in App\n      fetchUserRole().then(role => setUserDetails(email, role));\n      // Navigate to the home page\n      navigate(\"/\");\n    } else {\n      console.error(\"Login failed:\", data.message);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n\n    // Send form data to the API for registration\n    const response = await fetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      await handleLogin(); // If registration is successful, log in to the app automatically\n      console.log(\"Registration successful\");\n    } else {\n      const message = await response.text();\n      console.error(\"Registration failed:\", message);\n    }\n  };\n\n  // JSX returned by the component\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      className: \"w-full px-4 py-2 text-gray-700 bg-white border rounded-md focus:border-blue-500 focus:outline-none focus:ring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      className: \"w-full px-4 py-2 mt-2 text-gray-700 bg-white border rounded-md focus:border-blue-500 focus:outline-none focus:ring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full px-4 py-2 mt-4 text-white bg-blue-600 border border-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-50\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nasync function fetchUserRole() {\n  const response = await fetch(\"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/fetch-user\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    return data.role;\n  }\n  return null;\n}\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegistrationForm","setUserDetails","_s","email","setEmail","password","setPassword","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","localStorage","setItem","accessToken","fetchUserRole","then","role","error","message","handleSubmit","event","preventDefault","text","onSubmit","children","type","value","onChange","e","target","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Authorization","getItem","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/RegistrationForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction RegistrationForm({ setUserDetails }) {\n  // Initialize state variables\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Used to redirect the user\n\n  const handleLogin = async () => {\n    const response = await fetch(\n      \"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/login\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      }\n    );\n\n    const data = await response.json();\n    if (response.ok) {\n      console.log(\"Data: \", data);\n      // Store the tokens in localStorage\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      console.log(\"Token: \", data.accessToken); // Log the token in the console for debugging purposes\n      localStorage.setItem(\"userEmail\", email); // Store the user's email in localStorage\n      // fetch user role here and update state in App\n      fetchUserRole().then((role) => setUserDetails(email, role));\n      // Navigate to the home page\n      navigate(\"/\");\n    } else {\n      console.error(\"Login failed:\", data.message);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevent default form submission\n\n    // Send form data to the API for registration\n    const response = await fetch(\n      \"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/register\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      }\n    );\n\n    if (response.ok) {\n      await handleLogin(); // If registration is successful, log in to the app automatically\n      console.log(\"Registration successful\");\n    } else {\n      const message = await response.text();\n      console.error(\"Registration failed:\", message);\n    }\n  };\n\n  // JSX returned by the component\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n        className=\"w-full px-4 py-2 text-gray-700 bg-white border rounded-md focus:border-blue-500 focus:outline-none focus:ring\"\n      />\n\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        className=\"w-full px-4 py-2 mt-2 text-gray-700 bg-white border rounded-md focus:border-blue-500 focus:outline-none focus:ring\"\n      />\n\n      <button\n        type=\"submit\"\n        className=\"w-full px-4 py-2 mt-4 text-white bg-blue-600 border border-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-50\"\n      >\n        Register\n      </button>\n    </form>\n  );\n}\n\nasync function fetchUserRole() {\n  const response = await fetch(\n    \"https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/fetch-user\",\n    {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n    }\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.role;\n  }\n  return null;\n}\n\nexport default RegistrationForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}