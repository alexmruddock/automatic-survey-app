{"ast":null,"code":"var _jsxFileName = \"/workspaces/automatic-survey-app/frontend/src/SurveyResponses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport jsPDF from \"jspdf\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyResponses() {\n  _s();\n  const [surveyTitle, setSurveyTitle] = useState(\"\");\n  const [responses, setResponses] = useState([]);\n  const {\n    surveyId\n  } = useParams();\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\"); // Retrieve the stored token\n\n    // Fetch the survey details\n    fetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/retrieve-survey/${surveyId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setSurveyTitle(data.title); // Set the survey title\n    }).catch(error => console.error(\"Error fetching survey details:\", error));\n\n    // Fetch the survey responses\n    fetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/${surveyId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => setResponses(data)).catch(error => console.error(\"Error fetching responses:\", error));\n  }, [surveyId]);\n  const handleAnalyzeResponses = async () => {\n    try {\n      const response = await authenticatedFetch(`https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/analyze-responses/${surveyId}`, {\n        method: \"POST\"\n      });\n      if (response.ok) {\n        const {\n          analysis\n        } = await response.json();\n\n        // Handle the analysis result, possibly download it as a file\n        console.log(analysis);\n\n        // Function to download analysis as a PDF\n        const downloadAnalysis = (analysisText, surveyTitle) => {\n          const doc = new jsPDF();\n\n          // Use splitTextToSize to split the text into an array of strings\n          const splitText = doc.splitTextToSize(analysisText, 180); // 180 is the max width in mm\n\n          // Pass the array of strings to the text function\n          doc.text(splitText, 10, 10); // This will wrap the text to the next line\n\n          // Save the PDF with a dynamic name based on the survey title\n          doc.save(`${surveyTitle}-analysis.pdf`);\n        };\n        downloadAnalysis(analysis, surveyTitle);\n      } else {\n        console.error(\"Failed to analyze responses\");\n      }\n    } catch (error) {\n      console.error(\"Error analyzing responses:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white shadow-md rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Survey Responses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalyzeResponses,\n      className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mb-4 transition duration-300\",\n      children: \"Analyze Responses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), responses.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full table-auto border-collapse bg-white shadow-sm rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200\",\n            children: \"User Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200\",\n            children: \"Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"bg-white\",\n        children: responses.map(response => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap border-b border-gray-200\",\n            children: response.userEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap border-b border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc pl-6\",\n              children: response.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: answer.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this), \": \", answer.answer]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, response._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"No responses yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyResponses, \"n3XK/+XdgbVAt+G3zWhbhn5hVkA=\", false, function () {\n  return [useParams];\n});\n_c = SurveyResponses;\nexport default SurveyResponses;\nvar _c;\n$RefreshReg$(_c, \"SurveyResponses\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BackButton","authenticatedFetch","jsPDF","useNavigate","jsxDEV","_jsxDEV","SurveyResponses","_s","surveyTitle","setSurveyTitle","responses","setResponses","surveyId","token","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","title","catch","error","console","handleAnalyzeResponses","method","ok","analysis","log","downloadAnalysis","analysisText","doc","splitText","splitTextToSize","text","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","userEmail","answers","answer","index","question","_id","_c","$RefreshReg$"],"sources":["/workspaces/automatic-survey-app/frontend/src/SurveyResponses.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport authenticatedFetch from \"./authenticatedFetch\";\nimport jsPDF from \"jspdf\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SurveyResponses() {\n  const [surveyTitle, setSurveyTitle] = useState(\"\");\n  const [responses, setResponses] = useState([]);\n  const { surveyId } = useParams();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\"); // Retrieve the stored token\n\n    // Fetch the survey details\n    fetch(\n      `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/retrieve-survey/${surveyId}`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setSurveyTitle(data.title); // Set the survey title\n      })\n      .catch((error) => console.error(\"Error fetching survey details:\", error));\n\n    // Fetch the survey responses\n    fetch(\n      `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/survey-responses/${surveyId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => setResponses(data))\n      .catch((error) => console.error(\"Error fetching responses:\", error));\n  }, [surveyId]);\n\n  const handleAnalyzeResponses = async () => {\n    try {\n      const response = await authenticatedFetch(\n        `https://vigilant-orbit-v6x6pp4w99636w9v-3000.app.github.dev/analyze-responses/${surveyId}`,\n        {\n          method: \"POST\",\n        }\n      );\n      if (response.ok) {\n        const { analysis } = await response.json();\n\n        // Handle the analysis result, possibly download it as a file\n        console.log(analysis);\n\n        // Function to download analysis as a PDF\n        const downloadAnalysis = (analysisText, surveyTitle) => {\n          const doc = new jsPDF();\n\n          // Use splitTextToSize to split the text into an array of strings\n          const splitText = doc.splitTextToSize(analysisText, 180); // 180 is the max width in mm\n\n          // Pass the array of strings to the text function\n          doc.text(splitText, 10, 10); // This will wrap the text to the next line\n\n          // Save the PDF with a dynamic name based on the survey title\n          doc.save(`${surveyTitle}-analysis.pdf`);\n        };\n        downloadAnalysis(analysis, surveyTitle);\n      } else {\n        console.error(\"Failed to analyze responses\");\n      }\n    } catch (error) {\n      console.error(\"Error analyzing responses:\", error);\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-white shadow-md rounded-lg\">\n      <BackButton />\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">\n        Survey Responses\n      </h2>\n      <button\n        onClick={handleAnalyzeResponses}\n        className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mb-4 transition duration-300\"\n      >\n        Analyze Responses\n      </button>\n      {responses.length > 0 ? (\n        <table className=\"min-w-full table-auto border-collapse bg-white shadow-sm rounded-lg\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200\">\n                User Email\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200\">\n                Answers\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white\">\n            {responses.map((response) => (\n              <tr key={response._id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap border-b border-gray-200\">\n                  {response.userEmail}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap border-b border-gray-200\">\n                  <ul className=\"list-disc pl-6\">\n                    {response.answers.map((answer, index) => (\n                      <li key={index} className=\"text-gray-700\">\n                        <strong>{answer.question}</strong>: {answer.answer}\n                      </li>\n                    ))}\n                  </ul>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"text-gray-600\">No responses yet</p>\n      )}\n    </div>\n  );\n}\n\nexport default SurveyResponses;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}